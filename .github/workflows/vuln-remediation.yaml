name: Container Vulnerability Remediation

on:
  push:
    branches: [ master ]
  # schedule:
  #   - cron: '0 0 * * *'
  # workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  build-scan-remediate:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: 
          - 'admin-dashboard'
          - 'config-server'
          - 'eureka-server'
          - 'hystrix-dashboard'
          - 'service-a'
          - 'service-b'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build ${{ matrix.service }}
        run: |
          cd ${{ matrix.service }}
          if [ -f pom.xml ]; then
            mvn clean package -DskipTests
          fi

      - name: Upgrade Java Version in Dockerfile
        run: |
          cd ${{ matrix.service }}
          sed -i 's/FROM openjdk:8-jdk-alpine/FROM eclipse-temurin:17-jdk-alpine/g' Dockerfile
          sed -i 's/java -jar/\/opt\/java\/openjdk\/bin\/java -jar/g' Dockerfile
          sed -i "s/ADD target\/.*\.jar/ADD ${{ matrix.service }}.jar/g" Dockerfile

      - name: Build Docker image for ${{ matrix.service }}
        run: |
          cd ${{ matrix.service }}
          docker build -t ${{ matrix.service }}:${{ github.sha }} .

      - name: Run Trivy scan for ${{ matrix.service }}
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ matrix.service }}:${{ github.sha }}
          format: 'json'
          output: ${{ matrix.service }}/trivy-results.json
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: false
          exit-code: 0

      - name: Analyze scan results
        run: |
          cd ${{ matrix.service }}
          vuln_count=$(jq '[.Results[].Vulnerabilities[] | select(.Severity == "CRITICAL" or .Severity == "HIGH")] | length' trivy-results.json)
          fixable_count=$(jq '[.Results[].Vulnerabilities[] | select((.Severity == "CRITICAL" or .Severity == "HIGH") and .FixedVersion != null)] | length' trivy-results.json)

          echo "$vuln_count" > ../vuln_count.txt
          echo "$fixable_count" > ../fixable_count.txt
          echo "${{ matrix.service }}" > ../service.txt

      - name: Auto-remediate ${{ matrix.service }}
        run: |
          cd ${{ matrix.service }}
          python3 ../scripts/auto-patch.py trivy-results.json || echo "patch_failed" > ../patch_status.txt

          # Collect fixed list
          jq -r '[.Results[].Vulnerabilities[] | select(.FixedVersion != null) | "| \(.PkgName) | \(.Severity) | \(.VulnerabilityID) | \(.InstalledVersion) â†’ \(.FixedVersion) |"] | unique | .[]' trivy-results.json > ../fixed_list.txt
        continue-on-error: true

      - name: Commit Dockerfile changes
        run: |
          cd ${{ matrix.service }}
          git config user.name "security-bot"
          git config user.email "security-bot@users.noreply.github.com"
          git add Dockerfile || true
          git commit -m "fix(security): Auto-patch vulnerabilities in ${{ matrix.service }}" || true

      - name: Upload scan results
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.service }}-scan-results
          path: |
            service.txt
            vuln_count.txt
            fixable_count.txt
            fixed_list.txt
            patch_status.txt
        if: always()


  create-pr:
    needs: build-scan-remediate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Format PR body
        id: format
        run: |
          echo "## Vulnerability Remediation Report" > pr_body.txt
          echo "" >> pr_body.txt
          echo "**Services Patched:**" >> pr_body.txt

          for dir in $(ls -d *-scan-results); do
            cd $dir
            service=$(cat ../$dir/service.txt)
            fixable_count=$(cat ../$dir/fixable_count.txt)
            fixed_list=$(cat ../$dir/fixed_list.txt)

            if [ "$fixable_count" -ne 0 ]; then
              echo "- $service" >> ../pr_body.txt
              echo "" >> ../pr_body.txt
              echo "**Fixed Vulnerabilities in $service:**" >> ../pr_body.txt
              echo "$fixed_list" >> ../pr_body.txt
              echo "" >> ../pr_body.txt
            fi
            cd ..
          done

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "Security Patch: Vulnerability Remediation"
          commit-message: "fix(security): Auto-patch vulnerabilities across services"
          body-path: pr_body.txt
          labels: security,automated
